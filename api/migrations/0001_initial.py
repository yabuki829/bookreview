# Generated by Django 3.2.14 on 2024-02-02 13:39

import api.models
import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('activation_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.CharField(default='44wjCB7Tq33X2CjTcQeqoA', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.CharField(default='sPZUZtn1SnBYRWOzzKbejA', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('subTitle', models.CharField(default='', max_length=255)),
                ('author', models.CharField(default='None', max_length=255)),
                ('description', models.TextField(default='')),
                ('published_at', models.DateField()),
                ('image', models.ImageField(upload_to='books/images/')),
                ('average_rating', models.FloatField(blank=True, default=0.0)),
                ('review_count', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('name_en', models.CharField(default='None Category', max_length=255, primary_key=True, serialize=False)),
                ('name_jp', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.CharField(default='7F3UZTRKYB', editable=False, max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField()),
                ('image', models.ImageField(default='default.png', upload_to=api.models.user_directory_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.CharField(default='B2AOVwHZlwccrGHbxpc8Hz', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(default='')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_polls', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_Poll',
            fields=[
                ('id', models.CharField(default='VIFm9J5zpRPCvwNtF3QLmr', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('text', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='api.profile')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_poll', to='api.poll')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='api.poll')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='api.category'),
        ),
        migrations.AddField(
            model_name='book',
            name='readers',
            field=models.ManyToManyField(related_name='next_books', through='api.UserBook', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.CharField(default='nZmhkCf8bDoYMOmOuRB0ZU', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comment', to='api.blog')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='api.book'),
        ),
        migrations.AddField(
            model_name='blog',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='api.profile'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='api.tag'),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.CharField(default='GXgVnfVnUQoRjSGM4f8RMd', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.choice')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.poll')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('poll', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.CharField(default='P9N8nwFKqofpcOBWKxdf7q', editable=False, max_length=22, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.PositiveSmallIntegerField(default=1, help_text='1から5の範囲で評価をつけてください。', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
            options={
                'unique_together': {('user', 'book')},
            },
        ),
    ]
